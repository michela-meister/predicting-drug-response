INTRO
- explain that drug/sample searching is a crucial area of research
- series of experiments of increasing fidelity & cost, time
- improving efficiency important for precision medicine -- time is costly -- delays delay treatment!
- how to choose which drugs to advance?
--- previous stage does not perfectly predict next stage
--- advancing all samples/drugs is expensive and time-consuming
--- prematurely dropping samples/drugs could mean losing a successful match!

- we build an ML model to predict outcome in (next) experimental setting
- extra challenges: small, sparse datasets
- use transfer learning: large dataset from source stage, smaller dataset from target stage
--- source dataset gives some information, target tailors to that setting
- while transfer learning popular in ML, very few applications in computational oncology
- initial exploration of methodology, agnostic to biological info

- using our model we benchmark on cell-line expts, then predict pdx from pdo (retrospective analysis)
- in the cell line setting 
-- our model improves pearson correlation by X
-- our method reduces # expts by Z relative to model given only target info, demonstrating the value of the source info
- in the pdo-pdx setting
-- our model improves pearson correlation / spearman correlation by Y
- precision-recall?
- we also qualitatively examine embeddings learned by our model in both settings
-- show that (( ??? ))

THE DATA
- GDSC-CTD2-REP
-- cell line experiments in 3 different settings (explain settings)
-- (check:) work with intersection, all same samples (#?), drugs (#?)
-- sparsity of dataset: of the X possible pairs, have data on Y (sparsity = blah)
-- for a given sample, drug pair, the drug was tested at X different doses, and the fraction of cells remaining was recorded, resulting in X responses. a dose-response curve was fit to this data, and from this an AUC was computed.
---- high AUC: bad at killing cells, low AUC: good at killing cells
---- different dosages for different datasets: AUCs hard to compare
---- published auc vs auc overlap
-- we take in matrix of samples x drugs, where each cell holds log[(averaged) published auc]
-- assign each sample an integer sample id, assign each drug integer drug id
-- resulting data is matrix (stripped of biological info) of AUCs, for each dataset
- PDO-PDX
-- PDO: ic50: dose at which half the cells remain
-- PDX: T/C  (not using log version...)
-- verrry small dataset: 12 X 9, all values!


METHODS
- experiment with different pairs of the 3
- in any experiment: one dataet chosen as source, one dataset chosen as target
- data heldout from target
- model trained on source and remaining target
The Model
- construct model that approximates data as product of matrices:
- learn k-dimensional embeddings for drugs, held constant
- learn S for source samples, S' for target, where W maps S --> S'
- source ~ SD
- target ~ S'D, where S' = WD
- pyro, (describe full statistical model)
- for REP-GDSC-CTD2, k = 5, 10, ..., 50
- for PDO-PDX k = 1, ..., 9
Training / Eval
- run 10-fold cross-validation
- for each fold, run 5-fold cross-validation to choose k, then fit model to that k
- each run is done on 5 model-restarts (model corresponding to best training performance returned)
Experiments
- two types of holdouts: holdout (s, d) pairs vs holdout samples entirely
- both reported for REP-GDSC-CTD2
- only sample-holdout for PDO-PDX
- evaluate by measuring pearson correlation (don't need to predict AUC exactly, but want high prediction --> high auc)
- Expt 2c: holdout fold of samples, make predictions, measure pearson correlation
- Expt 2d: holdout (s, d) pairs, make predictions, measure pearson correlation
- precision-recall curves: from saved predictions in Expt 2c
- experiments saved: from Expt 2d
- embeddings: trained on entirety of source and target

RESULTS
- GDSC-REP-CTD2
-- Expt 2c
-- Expt 2d / experiments saved
-- precision-recall
-- embeddings
- PDO-PDX
-- emphasize that this is a verry small dataset!!
-- Expt 2c
-- precition-recall
-- embeddings

DISCUSSION
- researchers do expts regardless; lots of room for optimization
- many ways to potentially improve prediction
-- use side-info / biological info
- challenge is finding matched datasets (same samples in diff settings, pdo vs pdx)
-- use RNA-seq to learn from similar patients / match similar patients
 



NOTES / QUESTIONS:
- why use log(x) -- homeoskedastic?
- get code to clean data for pdo-pdx




 


- identifying effective anti-cancer drugs involves running a series of experiments of both increasing fidelity and increasing cost and complexity.
- Drugs may initially be tested in in-vitro experiments on cell lines, then in in-vitro experiments on organoids, and finally in mouse models before reaching the clinical trial stage.
- Later experiments, for example, in mouse models, require both significantly more money and more time.
- Improving the efficiency of this process is vital for precision medicine, where the time to find a drug is extremely important, since that is time the patient is going without treatment.
- However it's not always clear which drugs should be advanced from one stage to the next and good performance in earlier stages does not guarantee good performance in later stages (cite).
- As a result, researchers often make inefficient decisions: for example, testing all possible drugs across all possible cell lines, costing significant time and money, or on the other hand, only advancing a subset of drugs and risking eliminating an effective drug.
- Therefore, an important question is: given results from one experimental stage, which drugs should we advance to the next stage of testing?

- In this paper we use transfer learning to predict which drugs will perform well in different stages / a new experimental setting.
- At a high level, our model takes in a large amount of data from the "source" setting and a small amount of data from the "target" setting to predict unseen outcomes in the target setting.
- To begin, we examine mapping between different cell-line settings, through a retrospective study on GDSC, REP, and CTD2 datasets, in which we make predictions on the AUC of dose-response curves.
- Here we show that our model improves the pearson correlation of experiments by X.
- Additionally, we compare our transfer learning method to a method which only receives data from the target set and show that transfer learning would save Y experiments relative to a target-only approach.
- In the process of fitting a model, our model learns embeddings of the patient samples along the way. We also examine these embeddings and show that these embeddings have informative clusters??
- Having established the potential of transfer learning to make ogod predicitons, we apply our method to a dataset of pdo-pdx experiments, showing that we are able to improve the pearson correlation of the pdx predictions by T amount.
- We again examine these embeddings and find blah.


THE MODEL (put more of this in intro??)
- We can model the problem as a matrix where the rows are samples and the columns are drugs. 
- The value at cell (sample, drug) is some measurement of how well the drug kills (cancer?) cells in the sample.
- What makes this problem even harder is that this matrix is often sparse -- there are many missing values -- and these datasets tend to be very small.
- Our model takes in matrices of this form for both the source (M1) and target (M2) datasets
- model is agnostic to biological aspects of samples / drugs; purely a mathematical model 

CELL LINE EXPERIMENTS
THE DATA

METHODS

RESULTS

PDO-PDX EXPERIMENTS
THE DATA

METHODS

RESULTS





